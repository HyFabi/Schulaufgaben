package myutil;

public class Rekursionen {

	private int y = 0;
    int rwert = 0;
    public int sumRekursiv2(){
        if(y<10) {
        //int rwert = 0; 
        int add = 0;
        add= arr[y];
        y++;
        rwert= add+ rwert;
        System.out.print("+"+add);
        return sumRekursiv() + rwert;
        }
        else {
            System.out.print("="+rwert);
            return rwert;
        }
    }
	
	int d = 1;
	int s = 0;
	int i=s;
	int[] arr = { (int) (Math.random() * 10), (int) (Math.random() * 10), (int) (Math.random() * 10),
			(int) (Math.random() * 10), (int) (Math.random() * 10), (int) (Math.random() * 10),
			(int) (Math.random() * 10), (int) (Math.random() * 10), (int) (Math.random() * 10),
			(int) (Math.random() * 10) };

	public int fakultät(int n) {
		if (n > 16) {
			System.out.println("Wert zu hoch f�r INT");
			return 0;
		}
		d = d * n;
		n--;
		if (n > 1)
			fakultät(n);
		else
			System.out.println(d);
		return d;
	}

	public int ggt(int zahl1, int zahl2, boolean rekursiv) {
		if (rekursiv) {
			if (zahl1 % d >= 1 || zahl2 % d >= 1) {
				d--;
				ggt(zahl1, zahl2, true);
			} else {
				System.out.println(d);
			}
			return d;
		} else {
			while (d >= 0) {
				if (zahl1 % d <= 1 && zahl2 % d <= 1) {
					System.out.println(d);
					return d;
				}
				d--;
			}
			return d;
		}
	}

	public int getSumme(int zahl) {

		if (zahl > 0) {
			int i = ((int) (Math.random() * 6) + 5);
			if (d == 0)
				System.out.print(i);
			else
				System.out.print("+" + i);
			d = d + i;
			zahl--;
			getSumme(zahl);
		} else
			System.out.println("=" + d);
		return d;

	}

	public int teilbar(int von, int bis, int zahl) {
		if (von <= bis) {
			if (von % zahl < 1) {
				System.out.print(von + " ");
			}
			return teilbar(von + 1, bis, zahl);
		}
		return von;
	}

	public int sumIterativ() {
		int x = 0;
		for (int i : array) {
			if (x == 0)
				System.out.print(array[i]);
			else
				System.out.print("+" + array[i]);
			x = x + array[i];
		}
		System.out.println("=" + x);
		return x;
	}

	public int sumRekursiv() {

		if (s < array.length - 1) {
			d = d + array[s];
			System.out.print(array[s] + "+");
			s++;
			return sumRekursiv();
		}
		d = d + array[s];
		System.out.print(array[s]);
		System.out.println("=" + d);
		return d;
	}

	public int sumRekursivRuekwaerts() {
		if (s < array.length) {
			int s2 = s;
			int spech = array[s];
			d = d + spech;
			s++;
			sumRekursivRuekwaerts();
			if (s2 == 0) {
				System.out.print(spech);
			} else {
				System.out.print(spech + "+");
				s2--;
			}

		} else {
			System.out.print(d + "=");
		}
		return d;
	}

	public int folge1(int a, int b) {
		if (a > b) {
			System.out.print(d + "/" + a + " ");
			d = d * (-3);
			folge1(a - 2, b);
		} else if (a == b) {
			System.out.print(d + "/" + a + " ");
		}
		return b;

	}

	public int ziffernsumme(int zahl) {
		String zahl2 = Integer.toString(zahl);
		char[] array = zahl2.toCharArray();
		if (zahl < 0 && d != array.length) {
			zahl *= -1;
			return ziffernsumme(zahl);
		} else if (d != array.length) {
			if (zahl <= 9)
			{
				System.out.println(zahl+"="+zahl);
				return zahl;
			}
			s = array[d] - 48 + s;
			if(d==array.length-1)
				System.out.print(array[d]);
			else
				System.out.print(array[d] + "+");
			d++;
			return ziffernsumme(zahl);
		} else {
			System.out.println("=" + s);
			return zahl;
		}

	}
	
	public int baum(int hoehe) {
		
		if(hoehe>0)
		{
			if(d>1)
			{
				System.out.print(" ");
				d--;
				baum(hoehe);
			}
			else if(i>0)
			{
				System.out.print("*");
				i--;
				baum(hoehe);
			}
			else 
				{
				if(s==1)
					s=s+1;
				else
					s=s+2;
			i=s;
			d=hoehe-1;
			System.out.println("*");
			baum(hoehe-1);
				}
		}
		return hoehe;
	}

	public void falling(int startHoehe,int zeit)
	{
		s=startHoehe-(int)(0.5*9.80665*(d*d));
		if(d==0)
		{
		System.out.println("Sekunden  ->  Entfernung (Abwurf-Hoehe:"+startHoehe+")");
		System.out.println("--------  ->  ------------------------------");
		}
		if(zeit>=0 && s>=0)
		{
			
			System.out.println("  "+d+"    ->       "+(0.5*9.80665*(d*d)));
			d++;
			falling(startHoehe,zeit-1);
		}
		else if(zeit<0)
		{
			if(s<0)
				s=startHoehe-(int)(0.5*9.80665*((d-1)*(d-1)));
			System.out.println("Versus-Abbruch; verbleibende Resthoehe : "+s+" Meter");
		}
		else if(startHoehe>10)
		{
			System.out.println("  "+d+"    ->       Handy Kaputt");
		}
		else
		{
			System.out.println("  "+d+"    ->       Aufgekommen aber nicht kaputt");
		}
		
		
		
		
	}
	

	/*
	 * Die nachfolgenden Methoden werden nur f�r die Ausgabe GGT und Fakult�t
	 * verwendet
	 */

	public void initialized() {
		d = 1;
	}

	public void setS(int s) {
		this.s = s;
	}

	public void setdGroesser(int d2, int d1) {
		if (d2 > d1)
			this.d = d2;
		else
			this.d = d1;
	}
}
